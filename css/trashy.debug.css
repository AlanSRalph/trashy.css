/*
Variables.
==================================================*/

:root {
  --flag-invalid-color: #f00;

  --flag-invalid-outline:
    2px solid var(--flag-invalid-color);
}

/*
Flag "invalid" markup.
==================================================*/

[style],
:not(fieldset) > legend,
:not(figure) > figcaption,
:not(ul):not(ol) > li,
a[target]:not([rel*="noopener"]),
a[target]:not([rel*="noreferrer"]),
abbr:not([title]),
body :empty:not([aria-hidden]):not(area):not(br):not(col):not(embed):not(hr):not(iframe):not(img):not(input):not(object):not(param):not(source):not(textarea):not(track):not(wbr),
button:not([type]),
fieldset > :not(legend):first-child,
fieldset > legend:not(:first-child),
figure > figcaption:not(:first-child):not(:last-child),
input:not([type]),
input[type="checkbox"] + label,
input[type="radio"] + label,
input[type="radio"]:not([name]),
input:not([type="button"]):not([type="reset"]):not([type="submit"]):not([id]):not([aria-label]):not([aria-labelledby]):not([title]),
textarea:not([id]):not([aria-label]):not([aria-labelledby]),
select:not([id]):not([aria-label]):not([aria-labelledby])
img:not([alt]),
img:not([src]),
input:not([type]),
label:not([for]),
thead th[scope]:not([scope="col"]),
tbody th[scope]:not([scope="row"]),
ul > :not(li),
ol > :not(li) {
  outline:
    var(--flag-invalid-outline);

  position: relative;
}

[style]::after,
:not(fieldset) > legend::after,
:not(figure) > figcaption::after,
:not(ul):not(ol) > li,
a[target]:not([rel*="noopener"])::after,
a[target]:not([rel*="noreferrer"])::after,
abbr:not([title])::after,
body :empty:not([aria-hidden]):not(area):not(br):not(col):not(embed):not(hr):not(iframe):not(img):not(input):not(object):not(param):not(source):not(textarea):not(track):not(wbr)::after,
button:not([type])::after,
fieldset > :not(legend):first-child::after,
fieldset > legend:not(:first-child)::after,
figure > figcaption:not(:first-child):not(:last-child)::after,
img:not([alt])::after,
img:not([src])::after,
input:not([type])::after,
input[type="checkbox"] + label::after,
input[type="radio"] + label::after,
label:not([for])::after,
thead th[scope]:not([scope="col"])::after,
tbody th[scope]:not([scope="row"])::after,
ul > :not(li)::after,
ol > :not(li)::after {
  background:
    var(--flag-invalid-color);

  color: #fff;

  font-family: Verdana, sans-serif;
  font-size: 1.1rem;
  font-weight: normal;
  white-space: nowrap;
  text-decoration: none;

  padding-left: 0.5rem;
  padding-right: 0.5rem;

  pointer-events: none;

  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1;
}

/*
Inline `style`.
==================================================*/

[style]::after {
  content:
    'Inline [style="…"] detected'
  ;
}

/*
Risky links.
==================================================*/

a[target]:not([rel*="noopener"])::after,
a[target]:not([rel*="noreferrer"])::after {
  content:
    '[target="…"] also needs [rel="noopener noreferrer"]'
  ;
}

/*
Table: Incorrect `scope` values.
==================================================*/

thead th[scope]:not([scope="col"])::after {
  content:
    'Expected: [scope="col"]. Actual: [scope="' attr(scope) '"]'
  ;
}

tbody th[scope]:not([scope="row"])::after {
  content:
    'Expected: [scope="row"]. Actual: [scope="' attr(scope) '"]'
  ;
}

/*
Invalid `figcaption` nesting.
==================================================*/

:not(figure) > figcaption::after {
  content:
    "<figcaption> must be a child of <figure>"
  ;
}

figure > figcaption:not(:first-child):not(:last-child)::after {
  content:
    "<figcaption> must be first/last child of <figure>"
  ;
}

/*
Invalid `li` nesting.
==================================================*/

:not(ul):not(ol) > li,
ul > :not(li)::after,
ol > :not(li)::after {
  content:
    "<li> must be immediate child of <ul> or <ol>"
  ;
}

/*
Invalid `legend` position in `fieldset`.
==================================================*/

fieldset > :not(legend):first-child::after {
  content:
    "Invalid :first-child of <legend>"
  ;
}

:not(fieldset) > legend::after,
fieldset > legend:not(:first-child)::after {
  content:
    "<legend> must be :first-child of <fieldset>"
  ;
}

/*
Missing `for` on `label`.
==================================================*/

label:not([for])::after {
  content:
    '<label> needs [for="…"] to match <input> [id="…"]'
  ;
}

/*
Missing `type` on `button`.
==================================================*/

button:not([type])::after {
  content:
    '<button> needs [type="…"]'
  ;
}

/*
Missing `src` on `image`.
==================================================*/

img:not([src])::after {
  content:
    '<img> needs [src="…"]'
  ;
}

/*
Adjacent "checkbox" and "radio" labels.
==================================================*/

input[type="checkbox"] + label::after {
  content:
    '<input type="checkbox"> should be nested inside <label>'
  ;
}

input[type="radio"] + label::after {
  content:
    '<input type="radio"> should be nested inside <label>'
  ;
}

/*
Missing `title` in `abbr`.
==================================================*/

abbr:not([title])::after {
  content:
    '<abbr> needs [title="…"]'
  ;
}

/*
Empty elements.
==================================================*/

body :empty:not([aria-hidden]):not(area):not(br):not(col):not(embed):not(hr):not(iframe):not(img):not(input):not(object):not(param):not(source):not(textarea):not(track):not(wbr)::after {
  content:
    'Empty element: Consider [aria-hidden="true"]'
  ;
}