/*
Variables.
==================================================*/

:root {
  --flag-invalid-color: #f00;

  --flag-invalid-outline:
    2px solid var(--flag-invalid-color);

  --spacing-double:
    calc(2 * var(--spacing));
}

/*
Warnings for `head` and `style`.
=================================================*/

head {
  display: block;

  max-width: var(--max-page-width);

  margin-left: auto;
  margin-right: auto;

  padding-left: var(--spacing);
  padding-right: var(--spacing);
}

body link,
body style,
head > :first-child:not([charset="utf-8"]),
head > style:not(:first-of-type),
script:not([src]),
script[src]:not([async]),
title:empty {
  display: block;

  color: transparent;
  font-size: 0;
  line-height: 0;
  text-indent: -99999px;

  position: relative;

  width: 100%;
  height: var(--spacing);
  margin-bottom: var(--spacing);
}

/* Hide injected `script`. */
html > script {
  display: none !important;
}

/*
Outline "invalid" markup.
==================================================*/

:not(fieldset) > legend,
:not(figure) > figcaption,
:not(ul):not(ol) > li,
[style]:not(body):not(html),
a[href^="http:"],
a[target]:not([rel*="noopener"]),
a[target]:not([rel*="noreferrer"]),
abbr:not([title]),
body :empty:not([aria-hidden]):not(area):not(br):not(col):not(embed):not(hr):not(iframe):not(img):not(input):not(link):not(object):not(param):not(script):not(source):not(style):not(textarea):not(track):not(wbr),
button:not([type]),
fieldset > :not(legend):first-child,
fieldset > legend:not(:first-child),
figure > figcaption:not(:first-child):not(:last-child) ~ :last-child:not(figcaption),
figure > figcaption:not(:first-child):not(:last-child),
figure > figcaption:not(:first-of-type),
img:not([alt]),
img:not([src]),
input:not([type="button"]):not([type="reset"]):not([type="submit"]):not([id]):not([aria-label]):not([aria-labelledby]):not([title]),
input:not([type]),
input:not([type]),
input[type="checkbox"] + label,
input[type="radio"] + label,
input[type="radio"]:not([name]),
label:not([for]),
ol > :not(li),
select:not([id]):not([aria-label]):not([aria-labelledby]),
table[role="presentation"] tr:first-child td:first-child,
tbody th[scope]:not([scope="row"]),
textarea:not([id]):not([aria-label]):not([aria-labelledby]),
thead th[scope]:not([scope="col"]),
ul > :not(li) {
  outline: var(--flag-invalid-outline);
  position: relative;
}

/*
Visual style for warning indicators.
==================================================*/

:not(fieldset) > legend::after,
:not(figure) > figcaption::after,
:not(ul):not(ol) > li,
[style]:not(body):not(html)::after,
a[href^="http:"]::after,
a[target]:not([rel*="noopener"])::after,
a[target]:not([rel*="noreferrer"])::after,
abbr:not([title])::after,
body :empty:not([aria-hidden]):not(area):not(br):not(col):not(embed):not(hr):not(iframe):not(img):not(input):not(link):not(object):not(param):not(script):not(source):not(style):not(textarea):not(track):not(wbr)::after,
body link::after,
body style::after,
body[style]::before,
button:not([type])::after,
fieldset > :not(legend):first-child::after,
fieldset > legend:not(:first-child)::after,
figure > figcaption:not(:first-child):not(:last-child) ~ :last-child:not(figcaption)::after,
figure > figcaption:not(:first-child):not(:last-child)::after,
figure > figcaption:not(:first-of-type)::after,
head > :first-child:not([charset="utf-8"])::after,
head > style:not(:first-of-type)::after,
html:not([lang]) head::before,
img:not([alt])::after,
img:not([src])::after,
input:not([type])::after,
input[type="checkbox"] + label::after,
input[type="radio"] + label::after,
label:not([for])::after,
ol > :not(li)::after,
script:not([src])::after,
script[src]:not([async])::after,
table[role="presentation"] tr:first-child td:first-child::after,
tbody th[scope]:not([scope="row"])::after,
thead th[scope]:not([scope="col"])::after,
title:empty::after,
ul > :not(li)::after {
  background: var(--flag-invalid-color);
  color: #fff;
  display: inline-block;

  font-family: Verdana, sans-serif;
  font-size: 11px;
  font-weight: normal;
  line-height: 1.5;
  text-decoration: none;
  text-indent: 0;
  white-space: nowrap;

  padding-left: 5px;
  padding-right: 5px;

  pointer-events: none;

  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1;
}

/*
Inline `style`.
==================================================*/

[style]:not(body):not(html)::after {
  content:
    'Inline [style="…"] detected'
  ;
}

body[style]::before {
  position: static;
  margin-bottom: var(--spacing);

  content:
    '<body> has inline [style="…"]'
  ;
}

/*
Risky links.
==================================================*/

a[href^="http:"]::after {
  content:
    'Link to "http:" site. Does "https:" equivalent exist?'
  ;
}

a[target]:not([rel*="noopener"])::after,
a[target]:not([rel*="noreferrer"])::after {
  content:
    '[target="…"] also needs [rel="noopener noreferrer"]'
  ;
}

/*
Table: Incorrect `scope` values.
==================================================*/

thead th[scope]:not([scope="col"])::after {
  content:
    'Expected: [scope="col"]. Actual: [scope="' attr(scope) '"]'
  ;
}

tbody th[scope]:not([scope="row"])::after {
  content:
    'Expected: [scope="row"]. Actual: [scope="' attr(scope) '"]'
  ;
}

/*
Invalid `figcaption` nesting.
==================================================*/

:not(figure) > figcaption::after {
  content:
    "<figcaption> must be a child of <figure>"
  ;
}

figure > figcaption:not(:first-child):not(:last-child)::after,
figure > figcaption:not(:first-child):not(:last-child) ~ :last-child:not(figcaption)::after {
  content:
    "<figcaption> must be first/last child of <figure>"
  ;
}

figure > figcaption:not(:first-of-type)::after {
  content:
    "<figure> should only contain one <figcaption>" !important
  ;
}

/*
Invalid `li` nesting.
==================================================*/

:not(ul):not(ol) > li,
ul > :not(li)::after,
ol > :not(li)::after {
  content:
    "<li> must be immediate child of <ul> or <ol>"
  ;
}

/*
Invalid `legend` position in `fieldset`.
==================================================*/

fieldset > :not(legend):first-child::after {
  content:
    "Invalid :first-child of <legend>"
  ;
}

:not(fieldset) > legend::after,
fieldset > legend:not(:first-child)::after {
  content:
    "<legend> must be :first-child of <fieldset>"
  ;
}

/*
Missing `for` on `label`.
==================================================*/

label:not([for])::after {
  content:
    '<label> needs [for="…"] to match <input> [id="…"]'
  ;
}

/*
Missing `type` on `button`.
==================================================*/

button:not([type])::after {
  content:
    '<button> needs [type="…"]'
  ;
}

/*
Missing `src` on `image`.
==================================================*/

img:not([src])::after {
  content:
    '<img> needs [src="…"]'
  ;
}

/*
Adjacent "checkbox" and "radio" labels.
==================================================*/

input[type="checkbox"] + label::after {
  content:
    '<input type="checkbox"> should be nested inside <label>'
  ;
}

input[type="radio"] + label::after {
  content:
    '<input type="radio"> should be nested inside <label>'
  ;
}

/*
Missing `title` in `abbr`.
==================================================*/

abbr:not([title])::after {
  content:
    '<abbr> needs [title="…"]'
  ;
}

/*
Empty elements.
==================================================*/

body :empty:not([aria-hidden]):not(area):not(br):not(col):not(embed):not(hr):not(iframe):not(img):not(input):not(link):not(object):not(param):not(source):not(style):not(textarea):not(track):not(wbr)::after {
  content:
    'Empty element: Consider [aria-hidden="true"]'
  ;
}

/*
Flag missing `<html lang="…">` attribute.
=================================================
*/

html:not([lang]) head::before {
  position: static;
  margin-top: var(--spacing);

  content:
    'Missing [lang="…"] on <html>'
  ;
}

/*
Flag `<table role="presentation">`.
=================================================
*/

table[role="presentation"] tr:first-child td:first-child::after {
  content:
    '<table> has [role="presentation"] - Use Flexbox instead?'
  ;
}

/*
Missing `meta[charset]` tag.
=================================================*/

head > :first-child:not([charset="utf-8"])::after {
  content:
    '<head> needs <meta charset="utf-8"> as :first-child'
  ;
}

/*
Redundant `style` tags.
=================================================*/

head > style:not(:first-of-type)::after {
  content:
    "Use a single <style> tag for crucial CSS"
  ;
}

/*
Empty `title`.
=================================================*/

title:empty::after {
  content:
    "<title> cannot be empty"
  ;
}

/*
`script` tags.
=================================================*/

script:not([src])::after {
  content:
    'Move inline <script> to external *.js file'
  ;
}

script[src]:not([async])::after {
  content:
    'Consider [async] for <script> with [src="…"]'
  ;
}

body script:not([src])::after,
body script[src]:not([async])::after {
  top: 0;
}

/*
`style` not allowed within `body`.
=================================================*/

body style::after {
  top: 0;

  content:
    "<style> tag is not allowed within <body>"
  ;
}

/*
`link` not allowed within `body`.
=================================================*/

body link::after {
  top: 0;

  content:
    "<link> tag is not allowed within <body>"
  ;
}